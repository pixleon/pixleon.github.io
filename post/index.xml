<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Pixleon</title>
    <link>/post/</link>
      <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 04 Aug 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/logo.png</url>
      <title>Posts</title>
      <link>/post/</link>
    </image>
    
    <item>
      <title>Bit Jumper</title>
      <link>/post/bit-jumper/</link>
      <pubDate>Sun, 04 Aug 2024 00:00:00 +0000</pubDate>
      <guid>/post/bit-jumper/</guid>
      <description>&lt;p&gt;This summer I have had a bit less vacation but there has still been some room for a bit of &amp;ldquo;vacation programming&amp;rdquo;. This year I decided to do a simple game in Godot. I wrote a bit about Godot a while ago, but I never got to create any game protype to get a better feel for the engine, so I decided to change that. This resulted in a simple 2D climbing platformer prototype with a time attack mechanic and procedurally generated platforms. I decided to call this game prototype Bit Jumper. It uses low res pixel graphics and you spend a lot of time jumping so I thought that was a descriptive name. The process developing Bit Jumper was a fun and mostly frictionless process thanks to the iteration speed provided by the Godot engine. I did run into a few head scratching issues but nothing I could not overcome within 15 minutes or so.&lt;/p&gt;

&lt;p&gt;I also tried to involve my son in the design and graphics creation process. Both to get some “external input” but also to challenge him and activate his creativity. I used the built-in programming language called GDscript for all code in the game. The code editor inside the game engine editor provided a smooth experience, but I also added GDscript mode in Emacs to be able to feel more at home. The GDscript mode in Emacs worked great for me but I prefer having two monitors when using Emacs with Godot. One monitor for the Godot editor and one monitor for Emacs. I did spend a few hours developing Bit Jumper from the couch and then I switched to using the built-in editor. It worked out well most of the time, but it is not Emacs.The graphics and animations for the game were created in &lt;a href=&#34;https://www.aseprite.org/&#34; target=&#34;_blank&#34;&gt;Aasprite&lt;/a&gt;. It was very easy to import sprites from Aasprite to Godot and using Aasprite was mostly a smooth experience. I actually used a bit of Gimp to modulate the colors of the platform blocks but apart from that I only used Aasprite.&lt;/p&gt;

&lt;p&gt;I also tried using &lt;a href=&#34;https://www.beepbox.co/&#34; target=&#34;_blank&#34;&gt;Beepbox&lt;/a&gt; to create a short retro tune that I loop forever. Beepbox was very user friendly for doing simple retro tunes and I had &amp;ldquo;something good enough&amp;rdquo; for a POC in a few minutes. I think you can create pretty advanced tunes with it too but for game jams and the like I think it is an ideal tool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;POC features&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Jump mechanics.&lt;/li&gt;
&lt;li&gt;Pickups.&lt;/li&gt;
&lt;li&gt;Time attack.&lt;/li&gt;
&lt;li&gt;Platform generated by code (different experience for each play).

&lt;ul&gt;
&lt;li&gt;Well, not that different but still the platform layout and where the pickups are located differs between each play session.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Simple pixel graphics including a walk and idle animation.&lt;/li&gt;
&lt;li&gt;High score list tracking how far you climbed vertically.&lt;/li&gt;
&lt;li&gt;Sound effects and simple background music.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let me try to summarize my &amp;ldquo;vacation programming&amp;rdquo; experience with a &lt;strong&gt;Good&lt;/strong&gt; vs &lt;strong&gt;Bad&lt;/strong&gt; list.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Good&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GDscript.

&lt;ul&gt;
&lt;li&gt;It allowed me to iterate fast.&lt;/li&gt;
&lt;li&gt;Emitting signals and reacting to those was straightforward.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Godot documentation.

&lt;ul&gt;
&lt;li&gt;It was mostly very helpful and in the cases I could not find the answer I either figured it out myself or I successfully googled for the answer.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Graphics creation.

&lt;ul&gt;
&lt;li&gt;Creating and importing sprites from Aasprite, and to some extent Gimp, was fun and simple.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Not having to reinvent the wheel.

&lt;ul&gt;
&lt;li&gt;All the building blocks I needed were provided by Godot. For instance, gamepadsupport, windowed/full screen mode, UI etc.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Scope.

&lt;ul&gt;
&lt;li&gt;I kept the scope small, meaning I could make a fully playable prototype.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Beebox.

&lt;ul&gt;
&lt;li&gt;It was very user friendly and it was fun to create your own “music”.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;strong&gt;Bad&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Switching between scripts in the built-in editor was a bit tedious at times. Not sure if Godot is to blame for this or my ability to keep track of the script names.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In total I have probably spent around 24 hours on this prototype, including graphics, animation and music creation. It is playable and my kids think it is fun to play but it would require a lot more work to reach a level where I would be comfortable releasing this as a commercial game.&lt;/p&gt;

&lt;p&gt;We will see if I will continue developing it or not. Soon I will go back to full time work and then I will have a lot less time and energy for additional development.&lt;/p&gt;

&lt;p&gt;You can try out the very unpolished POC &lt;a href=&#34;https://pixleon.com/project/bit-jumper/BitJumper.zip&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That is all for now.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First Impression</title>
      <link>/post/first-impression/</link>
      <pubDate>Tue, 09 Jan 2024 00:00:00 +0000</pubDate>
      <guid>/post/first-impression/</guid>
      <description>&lt;p&gt;I have not posted anything in months so I thought it was time to tell the world that Pixleon is still alive.&lt;/p&gt;

&lt;p&gt;During the last eight months most of my work-related energy has been put into creating a successful launch of a new product for a customer I have been collaborating with during the last two years. It has been a fun, trying but rewarding time. During this period I have gotten the chance to learn and become productive in Rust. I have also been writing some Javascript, with mixed feelings. Anyway, the intention with this blog post is not to cover these programming languages, or the project I am helping out with, but rather connect to one of the goals I had with the last twelve months.&lt;/p&gt;

&lt;p&gt;If you read the previous &lt;a href=&#34;https://pixleon.com/post/learning-by-doing/&#34; target=&#34;_blank&#34;&gt;post&lt;/a&gt; I wrote about exploring commercial game engines to broaden my view and understanding of what is available out in the wild. I must confess that I thought I would be able to invest more time into this endeavour. I really try not to work more than eight hours a day since I want to have time and energy for other things like my family, friends and working out. I also would like to reduce the risk of burn out since I have a few friends that have already gone down that path. This means that there is currently not much room for personal projects since I have a full time contract with my customer. Sure, there is a difference between working on a personal project and doing contract work but I still think it is important to find time away from the computer to recharge.&lt;/p&gt;

&lt;p&gt;That being said, during the last year I have still managed to look into Game Maker, Unreal Engine, Godot and Bevy. Not in depth, but enough to have a better understanding of what the different engines have to offer and how it feels to develop software using some of the tools they provide. For Unreal and Godot I only did small experiments but for Game Maker and Bevy I went a bit deeper. I already covered some thoughts about Game Maker but I want to add a few words about Unreal, Godot and Bevy. Note that the comments below do not cover any engine in depth, it is rather a short summary of my first impressions.&lt;/p&gt;

&lt;p&gt;Let us start with the Unreal Engine. What I do like about Unreal is the fantastic (unmatched?) graphics capabilities. It is easy to make something look good and the free Quixel library together with the nice Quixel bridge plugin makes finding and applying great materials a breeze. I also experimented a bit with camera animation and particle systems. It was straight forward and the end-result looked good. I spent some time and effort to understand the Blueprint &amp;ldquo;programming&amp;rdquo; approach and even though I can see the benefit with this approach I did not fall in love with it. I think it boils down to the fact that I am used to writing code and dragging out nodes and connecting them is just not as appealing to me. I also did not fall in love with the fact that the editor crashed a few times, nor the shader compilation times. I do have a pretty decent machine at my disposal but maybe not fast enough to have a great Unreal Engine experience. The most important question I am currently trying to answer is: &amp;ldquo;Will I enjoy developing applications using engine/tool X?&amp;rdquo;. The answer to that for Unreal Engine currently is: &amp;ldquo;Maybe&amp;rdquo;. It probably depends on what kind of application and if I need to do most of the development using Blueprints or if I could use some other type of scripting language. I recently played &amp;ldquo;It Takes Two&amp;rdquo; by Hazelight (awesome game) and learned it was developed using &lt;a href=&#34;https://angelscript.hazelight.se/&#34; target=&#34;_blank&#34;&gt;Unreal Engine Angelscript&lt;/a&gt;. Maybe I would enjoy using something like that or just plain C++ more? If photo realism would be a goal for the project, Unreal Engine would still be my first choice. I might delve deeper into this engine during the upcoming year, time will tell. If I take into account collaboration with other developers and artists then Unreal Engine might be a good path forward.&lt;/p&gt;

&lt;p&gt;So what about Godot then? I have been following the development of Godot on the sideline for some time now and I have been wanting to experiment with it for a while. I think I need to return to Godot later on because I have not spent enough time with it to give a proper review. I can tell you a bit about the first impressions though. My first thought when starting the editor was that it feels very snappy. The UI is very responsive and working with nodes felt natural to me. I experimented a bit with their non-baking global illumination solutions but I was nowhere near getting the same quality as I get using Unreal Engine. Part of that is probably to blame on me and parts of it is probably due to limitations in the technology. I did test GDScript a bit and I think I would enjoy creating games using that. It seems like more Unity developers have been turning towards Godot lately so it might get even better traction in the upcoming years.&lt;/p&gt;

&lt;p&gt;Last but not least I have been experimenting with Bevy. I was mostly interested in trying out Bevy since it is written in Rust and I happen to have fallen in love with Rust during the last year. Everything with Rust is not great but the cross platform support, cargo, compile-time help you get etc is really good compared to what I am used to. I have been struggling a bit with Rust when I want to try out a simple idea and have to fight the borrow-checker, so it is not all roses.&lt;/p&gt;

&lt;p&gt;I did learn that Rust and Bevy made it easy to develop applications for the web by leveraging WASM. So I was a bit interested in exploring that further. After a while I had a simple application that I could link from this very site (I do not intend to keep this experiment for long so no real point to link to it here). I was able to get some simple lighting going and some basic support for keyboard or touchscreen input. The touchscreen input was especially interesting since this would allow me to build mobile web applications using Bevy.&lt;/p&gt;

&lt;p&gt;I was a bit surprised how easy it was to work with Bevy and I enjoyed the development process more than some of the alternatives I tried earlier. Compared to some of the other engines Bevy is still far behind but for some types of applications it is probably a better choice compared to behemoths like Unreal Engine. There is for instance no editor for Bevy, at least not yet. Not having an editor has not been a problem for me though. I like writing code in Emacs and running the game directly from Emacs. The shorter iteration time the better. Bevy was pretty easy to get up&amp;rsquo;n running with Emacs and by dynamically linking the code I was able to get pretty good iteration speed (around 3s). It is not as good as a built-in scripting language where you can edit the game while it is running but it is not bad. Also, integrating a scripting language on top of Bevy could also be a path to explore in the future.&lt;/p&gt;

&lt;p&gt;After I finished the WASM experiment I wanted to dig more into game creation using Bevy. I have a simple POC (see image at the top) where the player should collect letters to form words. The idea is that the game shows an image of &amp;ldquo;something&amp;rdquo; and then the player must find the letters to spell the word that &amp;ldquo;something&amp;rdquo; represents. This is just a simple idea to get a feel for how it would be to create a real game using Bevy. There are still a few questions left to be answered so I will probably continue with this POC for some time. What I do know already though is that I enjoyed creating this POC in Bevy. Like a lot. The iteration time could be better for sure, but the simplicity in realizing my ideas for the &amp;ldquo;game&amp;rdquo; (so far) really appeals to me.&lt;/p&gt;

&lt;p&gt;I am not sure where this will take me but I am pretty sure I will keep on experimenting with game engines in the upcoming year. That being said, my family along with my well being and the success of the company I am currently collaborating with is currently my top priority. Until next time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning by doing</title>
      <link>/post/learning-by-doing/</link>
      <pubDate>Sat, 08 Apr 2023 00:00:00 +0000</pubDate>
      <guid>/post/learning-by-doing/</guid>
      <description>&lt;p&gt;One of my goals this year is to explore and learn more about commercial game engines. Creating a custom engine is fun and a great learning experience but the time invested in building the engine reduces the time available for actual game or application development. I am not totally against investing more time into a custom engine but it should be done for the right reasons. To decide if a specific game or other type of application would benefit from custom tech you should know about the alternatives. In the past I have been playing around with a few different engines like Unity, Unreal Engine, Our Machinery, GameMaker and so on but I never did anything serious in any of them.&lt;/p&gt;

&lt;p&gt;While studying at Linköping University I took a course in game design and in that course we used GameMaker to create some game prototypes. During the winter holidays I was able to find some time to revisit GameMaker. Overall, I think it was pretty straight forward to pick up GameMaker again. I created a simple physics-based platform game and tried to involve and inspire my son in the process. The game is very simple. There are two players, each controlled from the same keyboard. The goal of the game is to collaborate and collect all the fruit on a level as fast as possible. The time it takes to collect all fruit is stored in a high score table. There is no real depth to the game play and no story but still enough elements to have a bit of a challenge and get a chance to learn a bit of how it would be to create a “real” game in GameMaker.&lt;/p&gt;

&lt;p&gt;Since I have been interested in game development for more than two decades by now I am pretty used to the game development vocabulary. This definitely helps when getting into a commercial engine like GameMaker. If I had no prior experience to game development it would probably be more challenging, but probably still manageable.&lt;/p&gt;

&lt;p&gt;If you are making a low-res platform game it is also pretty easy for children to contribute with some simple graphics. In our case me and my son collaborated a bit creating a banana, orange, pineapple and pear as the game’s collectable items. We also recorded some guitar sound with my phone and put into the game when some fruit was collected. After a while we decided to change that sound for a “crunchier” sound found on &lt;a href=&#34;https://freesound.org/&#34; target=&#34;_blank&#34;&gt;Freesound&lt;/a&gt;. We also tried to create some shapes with pearl plates, photograph them, mask out the background and move them into the game. In theory that should work fine but in practice the result was not so nice. However, it was a fun thing to try out and with some fine tuning I think that could be a fun way for children to create art for a game. The main idea with the guitar and the pearl plate was that I wanted to mediate the idea that you can create art in the real world, transfer it to a computer and share that art with others. I am pretty sure my son enjoyed the experience and got something out of it, but to be honest I think I got more out of this experiment.&lt;/p&gt;

&lt;p&gt;I have invested too little time to reach any deep insights regarding using GameMaker for a more serious project. However, the initial impression is that you can create pretty nice things with relatively little effort. Will it be an enjoyable experience to build a bigger game in GameMaker? Not sure, but maybe. I know there are some ambitious games that have been made with GameMaker, like &lt;a href=&#34;https://store.steampowered.com/app/1390350/Webbed/&#34; target=&#34;_blank&#34;&gt;Webbed&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I hope I can find more time to revisit more commercial game engines during this and the upcoming year. I might not end up using any of them for a real product, but I am convinced that knowing more about them is something that will help me make conscious tech decisions in the future.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Time for an Adventure</title>
      <link>/post/adventure/</link>
      <pubDate>Wed, 04 May 2022 00:00:00 +0000</pubDate>
      <guid>/post/adventure/</guid>
      <description>&lt;p&gt;We are almost half through 2022 and I have not posted any update in a long time so here we go. In August last year I updated Marbleous Blocks with a built-in level editor along with the possibility to easily share levels with other players. Did sales take off? No! Was I happy with the result? Yes! Did I reach the conclusion that it is time to move on to new projects? Yes! :)&lt;/p&gt;

&lt;p&gt;During the Autumn I only worked 60% and spent the rest of my time with my family. It is really awesome to live in a country like Sweden where it is culturally accepted and financially viable to take time off to be with your kids. Working 60% was okay but it was hard to convince the brain that I no longer could get as much work done. Overall, I think I managed to balance it quite well. During this time I was part of a group adding support for PBR materials for CET Designer and even though the release was intense I think we managed to take some important steps towards modernizing the graphics capabilities for CET Designer. During this time I also worked with another individual on writing a &lt;a href=&#34;https://support.configura.com/hc/en-us/articles/4415768957463-Rendering-Guide-Introduction&#34; target=&#34;_blank&#34;&gt;tutorial&lt;/a&gt; on how to produce nice renderings in CET Designer. I was pretty pleased with the end result and I really hope some users got some nice insights from this work.&lt;/p&gt;

&lt;p&gt;In the beginning of December I finally took the step and handed in my letter of resignation. I had been thinking about running my own business for a long time so it was about time to avoid a &amp;ldquo;What if?&amp;rdquo;. It still felt pretty surreal making the final decision to leave a company you worked at for almost 14 years. Overall I am very thankful for my time at Configura and all the things I learned over the years. In the end I guess what I will remember is the people I worked with and the things we went through together. I once read that people will not remember what you said or did but rather how you made them feel. I think there is some truth to that.&lt;/p&gt;

&lt;p&gt;During my last few months I helped out with creating a bridge between CET Designer and Twinmotion. This was a pretty fun project and I think it is a good step for Configura to leverage the rendering capabilities developed by Epic. It will be interesting to follow how that is received.&lt;/p&gt;

&lt;p&gt;Currently I am working as a contractor at an unnamed Linkoping company. I have been there around two months now and even though I feel I still have things to prove I think it is progressing well. I have learnt a ton of new things and I hope/think I have been able to bring some value back to them. It is a humbling experience going from being an &amp;ldquo;expert&amp;rdquo; on a product, or at least subsystem, to being a complete rookie. That being said, many concepts are recognizable from CET Designer and I still approach software development in the same way as I did before. We will see how things play out but so far I am enjoying the so called adventure.&lt;/p&gt;

&lt;p&gt;I think I will leave it at this for now. Sometime in the future I will probably write more about my time at Configura and outline my main takeaways. Until next time!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arcade 1.0</title>
      <link>/post/arcade-1.0/</link>
      <pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate>
      <guid>/post/arcade-1.0/</guid>
      <description>&lt;p&gt;The arcade mode and level editor for Marbleous Blocks is now ready to be shared with the world. I really enjoy working on tools that allow other people to be creative. I really hope the Covid-19 situation improves in the upcoming months so I get the chance to showcase the game and the new features live.&lt;/p&gt;

&lt;p&gt;Interacting with users live and getting direct feedback is extremely useful and usually something that gives me energy to keep improving, both the application or game itself but also my own skills.&lt;/p&gt;

&lt;p&gt;I made a short video to introduce the level editor. I tried to keep it short and to the point. On the first iterations I had some serious problems with voice recording but I managed to resolve this by plugging in some addtional power to my audio interface. The power from the USB alone was not enough for my microphone, or at least so it seems.&lt;/p&gt;

&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/X9qdYJBC3Ds&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;I intend to release this along with a few new levels in the beginning of september.&lt;/p&gt;

&lt;p&gt;Psst, if you want to try the level editor and arcade before the main release it is available &lt;a href=&#34;https://github.com/pixleon/pixleon.github.io/releases/download/mb/Marbleous.Blocks.zip&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;. Please note that this version does not support publishing levels on Steam.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arcade in the making</title>
      <link>/post/arcade-in-the-making/</link>
      <pubDate>Thu, 22 Jul 2021 00:00:00 +0000</pubDate>
      <guid>/post/arcade-in-the-making/</guid>
      <description>&lt;p&gt;Around six months after Marbleous Blocks was released I am finally back working on the game and the Pixleon engine. Since the release I have been completely focused on my full time job and family. The next piece of the puzzle is to release a level editor along with an arcade mode. The idea is to allow creative people to share interesting levels they have built and thereby add more variation to the game experience.&lt;/p&gt;

&lt;p&gt;Creating levels vs playing them is very different but there are similarities. Both activities require creative thinking and are fun in different ways. Watching someone struggle a bit but eventually figure out a well thought out puzzle along with the joy that comes with that is very rewarding. I hope that by extending the game with this feature set the game will be able to attract a wider audience. Even if that is not the case it is a great learning experience to create a level editor for the public and a system to share content. The Marbleous Blocks development endeavour is all about learning and expanding my skill set. Obviously I want the game to reach a lot of players but just learning more things helps me stay motivated.&lt;/p&gt;

&lt;p&gt;I am relying on the Steam workshop API for sharing levels between the players. So far it has been pretty straightforward to implement and most of the functionality is already working fine. I have implemented support for both publishing new levels and downloading levels published by others. The solution still needs more polish though and generally polish takes more time than one might expect. Hopefully I will be able to release this during the autumn. Please let me know if you are interested in trying this out before I release it to everybody.&lt;/p&gt;

&lt;p&gt;While working on this I have also made some quality of life fixes for the level editor. It is challenging and fun to build a good level editor. It is so easy to become blind for potential friction areas in the user interface and the intended workflow. I really hope the solution is simple enough to allow a wide range of creative minds, including children, to build interesting levels.&lt;/p&gt;

&lt;p&gt;I also added a feature that allows creators to have levels with an infinite amount of energy. Hopefully this step makes the game experience more approachable for an audience that are into less hardcore puzzles.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Marbleous Blocks Retrospect</title>
      <link>/post/marbleous-blocks-retrospect/</link>
      <pubDate>Sat, 16 Jan 2021 00:00:00 +0000</pubDate>
      <guid>/post/marbleous-blocks-retrospect/</guid>
      <description>&lt;p&gt;Developing Marbleous Blocks and the Pixleon Engine has been a long but rewarding journey. Unfortunately, I have not been keeping track of the number of hours I have put into this project, but a wild guess would be somewhere between six to twelve months of full-time work. That is a lot of time, so a valid question is of course if it was worth it? Before I try to answer that question, I should probably outline the goals of the project:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a game with at least one new/interesting mechanic.&lt;/li&gt;
&lt;li&gt;Create a game without the use of an existing game engine.&lt;/li&gt;
&lt;li&gt;Learn as much as possible about developing and releasing games.&lt;/li&gt;
&lt;li&gt;Release the game.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The first and second goal have already been reached. The third goal is a bit hard to measure but I have learnt a lot of new concepts, both technical and non-technical. Concerning the fourth goal I expect to reach that in eleven days. So just by looking at these goals I think this adventure has been a great success. Could some things have gone better and faster? Definitely. Would I have done things differently starting out today? Absolutely. But to me answering yes to these questions also means that:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The project was non-trivial (for me).&lt;/li&gt;
&lt;li&gt;The project improved my knowledge of the problem domain.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, what went good and what could have gone better? I like lists so here we go.&lt;/p&gt;

&lt;p&gt;The Good:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Looking back, I think that deciding to write my own engine helped me stay motivated.

&lt;ul&gt;
&lt;li&gt;It was an interesting technical challenge.&lt;/li&gt;
&lt;li&gt;I could focus on programming and finding flow instead of reading manuals.&lt;/li&gt;
&lt;li&gt;I was constantly learning new things and thereby improving my skillset.&lt;/li&gt;
&lt;li&gt;I created a clear separation between the engine and the game. This means that in the end I did not only get a game I could release I also got a slim and capable game engine. The separation also helped with build times, debugging etc.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;I wrote the build system (basically how to produce the executable game file) myself which did not only give me a better understanding of this, but it also made it very easy to integrate new libraries. On top of that I could tweak the build system to do minimal rebuild which saved me a lot of time and improved my &amp;ldquo;quality of life&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;I wrote a &amp;ldquo;graphical debugger&amp;rdquo; early on. What I mean by that is that I made it trivial to add bounding boxes with wireframes, creating lines, spheres and so on. This is extremely useful when developing a game, especially a 3D-game.&lt;/li&gt;
&lt;li&gt;I talked early about releasing Marbleous Blocks which gave me some positive external pressure. During a period of six months, I even took one day a week off to work on the game, adding some more external pressure.&lt;/li&gt;
&lt;li&gt;I shared progress early with friends and got some valuable feedback. This also boosted my motivation to keep going.&lt;/li&gt;
&lt;li&gt;Early on I decided to keep things simple. That meant:

&lt;ul&gt;
&lt;li&gt;No huge worlds.&lt;/li&gt;
&lt;li&gt;No fancy character animations.&lt;/li&gt;
&lt;li&gt;Minimalistic graphics.&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;I finished the game. Completing projects is harder than one might expect. I claim that completing projects is a skill. Just like any skill it can be improved through training. From my perspective the key is to cut corners without sacrificing something you know you will need. Making the right decisions here comes from experience and experience is something you gain by failing, reflecting, and improving.&lt;/li&gt;
&lt;li&gt;I bought a new computer which greatly boosted my productivity (thanks Goran Esmail for the build). My old Intel i7-4770K served me well for years but my new AMD Ryzen 3700 is a monster compared to it.&lt;/li&gt;
&lt;li&gt;I wrote a diary of accomplishments I did while working. I also planned each &amp;ldquo;work session&amp;rdquo; beforehand which meant that many times I had a good understanding the problem I was going to work on before I started typing.&lt;/li&gt;
&lt;li&gt;I used milestones which I revised on a regular basis. This helped me to stay focused on the most important aspect of finishing the game.&lt;/li&gt;
&lt;li&gt;I started communicating about the game on this webpage which naturally forced me to reflect on the development process. It is also fun to have some documented steps of to look back at.&lt;/li&gt;
&lt;li&gt;I have learnt a lot about the Steam platform. I am still far from an expert, but I know the fundamental things.&lt;/li&gt;
&lt;li&gt;I postponed optimization until late which pushed me into attacking the parts that mattered, like 3D-model loading for instance.&lt;/li&gt;
&lt;li&gt;Used Bullet for physics. Writing my own physics engine would have taken alot of time. I have gone down that route before&amp;hellip;&lt;/li&gt;
&lt;li&gt;Used FMOD for sound. It is an easy-to-use API that had all I needed and much more.&lt;/li&gt;
&lt;li&gt;Instead of relying entirely on the STL vocabulary I ended up wrapping the STL classes in my own containers. This allowed me to use more concise naming. I am not too fond of push_back etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Bad:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I thought I was going to release this game in March 2020. Creating the level editor took longer than I expected and even though I decided to keep things simple I still grew the scope a bit to make the game a bit more interesting.&lt;/li&gt;
&lt;li&gt;I integrated Lua as a scripting language but ended up never using it. It was a nice learning experience but once I had the level editor, I no longer needed Lua to create levels.&lt;/li&gt;
&lt;li&gt;I had no &amp;ldquo;test farm&amp;rdquo; of computers. Late in the project I learnt that I had some problems with AMD GPUs and OpenGL. It would have been nice to discover something like this much earlier, but it would also require me to invest more time into testing earlier. As usual there is a sweet spot but I think I was pretty far off when it comes to testing on various machines. This is a nice argument for developing a game targeting a console with very specific hardware. Chasing driver/hardware bugs is not fun business.&lt;/li&gt;
&lt;li&gt;I did not think about the story element of Marbleous Blocks until very late in the development process. When I think about games I really enjoyed playing, and why I liked playing them, story is not the first thing that come to mind. I prefer a very polished interaction model, where you really feel you are in control, along with great graphics and sound. However, during this project I have learnt that story should not be overlooked. I think that having a solid story can lead to a clearer design and deliver an experience with more layers. I will keep this in mind for future game projects.&lt;/li&gt;
&lt;li&gt;I did lose some license information about some of the sound assets I am using. It was tedious to track these down again.&lt;/li&gt;
&lt;li&gt;It was hard to find good hours to focus on the game while working full time and taking care of kids. Do not get me wrong, having kids is great and it gives me a lot of positive energy but there is only 24 hours each day.&lt;/li&gt;
&lt;li&gt;Around two years ago I learnt about a neat library called Live++. It allows you to edit C++ programs while they are running - a great productivity boost. For some reason I never started using it for real. I think I should have.&lt;/li&gt;
&lt;li&gt;I did not show the game externally until very late. I have learnt that for your game to stand a chance to become a commercial success you really need a strong community around it.&lt;/li&gt;
&lt;li&gt;Maybe, just maybe, I should have tried to deliver a game in another genre. Do not get me wrong. I really like the result of Marbleous Block but there are a lot of puzzle games out there. It can be very hard to stand out from the crowd even if you have an interesting game mechanic. Thinking about marketing very early is something I will bring with me for future game projects.&lt;/li&gt;
&lt;li&gt;PC might not be the ideal platform for a point &amp;amp; click game like Marbleous Blocks. A tablet would probably have been a wiser choice. I wanted to finish a game and doing it for PC was the fastest way to achieve that goal.&lt;/li&gt;
&lt;li&gt;Did not use SDL or the like. Sure, I got a better understanding of the win32 API but if I would have used SDL I would have gotten Linux/Mac OS support with less effort. I may still go down that route.&lt;/li&gt;
&lt;li&gt;I wanted to release early but releasing a puzzle game early can be hard. The replayability aspect is limited. For the next project I probably want to release an initial version much earlier, but this  means I need to design a game that deliver a new experience for each session.&lt;/li&gt;
&lt;li&gt;Postponed tracking allocations until very late. Once I got a nice hash map tracking allocations together with file and line number it was fairly easy to find all the leaks. I could have done this much earlier.&lt;/li&gt;
&lt;li&gt;Should have written a small script for generating classes. Even though Marbleous Blocks may seem like a small game I wrote 100+ classes for it. There are a lot of tedious work when creating a new class in C++.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So again, was it worth it?&lt;/p&gt;

&lt;p&gt;I definitely thinks so. From a economic stand point Marbleous Blocks will most likely not change my life, but from an experience point of view this journey has been very rewarding. I really love imagining something and entering what sometimes seems to be an endless loop of thinking, typing and testing. Well, the loop is finally finding its break point, at least for this time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Polish</title>
      <link>/post/polish/</link>
      <pubDate>Sat, 24 Oct 2020 00:00:00 +0000</pubDate>
      <guid>/post/polish/</guid>
      <description>&lt;p&gt;The development of Marbleous Blocks is still going in the right direction. Lately I have been focusing on polish and finalization (if there is such a thing). During the last month I have been fortunate enough to get quite a bit of play testing and each session usually reveals some area where there is room for improvement.&lt;/p&gt;

&lt;p&gt;I hope I will find more people interested in testing the game and giving feedback. I will try to use the local community &lt;a href=&#34;https://eastswedengame.se/&#34; target=&#34;_blank&#34;&gt;ESG&lt;/a&gt; for this. Even though I am not a super active member of ESG (yet) it has already given me a lot. There are some areas of game development where I still have a lot to learn, marketing being one of them. I have gotten some really nice tips/links related to marketing and other topics, but even though I have not used it all yet I have gained some valuable knowledge.&lt;/p&gt;

&lt;p&gt;During the polish phase of Marbleous Blocks I have changed the look of the game a bit, giving it a bit more personality. I have also introduced a clear but simple story. Your goal is to help our marble hero Max retrieve the missing orbs and make sure the rainbow gets its colors back. Marbleous Blocks was never meant to be a story heavy game but that does not mean there should not be any story. A good story can help a lot with immersion and can motivate the player to keep playing. I still think that the game mechanics and how it feels to interact with the game is more important than the actual story, but to create a great game I think you need both, and a lot of other ingredients of course.&lt;/p&gt;

&lt;p&gt;So what more have I done lately? Well, among other things I have created Steam achievements, rewritten some texts related to the game and reworked the old trailer. If you have any feedback on the new trailer or anything else please let me know.&lt;/p&gt;

&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/l20DGhKEiUA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;And oh, here is the &lt;a href=&#34;https://store.steampowered.com/app/1335700/Marbleous_Blocks/&#34; target=&#34;_blank&#34;&gt;link to the Steam page!&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Graphics</title>
      <link>/post/graphics/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      <guid>/post/graphics/</guid>
      <description>&lt;p&gt;Lately I have been focusing my work on extending the graphics capabilities of the Pixleon engine. I have done some other tasks as well but this post will mostly focus on graphics related work.&lt;/p&gt;

&lt;p&gt;Here is a list of the topics I have been digging into:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Anti aliasing.&lt;/li&gt;
&lt;li&gt;Bloom.&lt;/li&gt;
&lt;li&gt;Normal mapping.&lt;/li&gt;
&lt;li&gt;Environment mapping.&lt;/li&gt;
&lt;li&gt;Tweak SSAO.&lt;/li&gt;
&lt;li&gt;Outline for blocks to be placed.&lt;/li&gt;
&lt;li&gt;Blender sculpting, decimation and UV-mapping.&lt;/li&gt;
&lt;li&gt;Eye highlight.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;Anti aliasing&lt;/b&gt;
&lt;br/&gt;
Up until now I have relied on the GPU built-in FXAA solution to reduce &amp;ldquo;jaggies&amp;rdquo; when rendering frames for Marbleous Blocks. It is fast and gets the job done but it can also have a negative effect on the crispness of the rendered frame. This was very apparent when rendering text elements for the level editor. There is also a risk that the user playing the game does not have FXAA enabled.&lt;/p&gt;

&lt;p&gt;To overcome this I have looked into other alternatives. There is a relatively new TAA solution that seems to be pretty popular nowadays, there is the OpenGL built-in MSAA solution and there are a couple of different versions of the already mentioned FXAA solution. Since MSAA is not recommended to use together with deferred rendering I decided to start by implementing FXAA. I realized there were already plenty of FXAA samples and finally I decided to port the following solution found on &lt;a href=&#34;https://www.shadertoy.com/view/ttXGzn&#34; target=&#34;_blank&#34;&gt;ShaderToy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The result is better compared to no anti aliasing but it is not as good as the FXAA option found in the Nvidia control panel. I have not digged deeper into this yet though.&lt;/p&gt;

&lt;p&gt;The HUD elements in the game are rendered using a forward rendering pass (blending it over the deferred rendered pass). For this part of the frame I was able to use the OpenGL built-in MSAA solution. Even though this is just a small detail of the entire frame I think it gave the game a much better look. This last part was actually a little bit tricky. The OpenGL library I use, &lt;a href=&#34;http://glew.sourceforge.net/&#34; target=&#34;_blank&#34;&gt;GLEW&lt;/a&gt;, was pretty picky with how to activate this. If you have trouble getting this to work yourself please send an &lt;a href=&#34;mailto:mail@pixleon.com&#34; target=&#34;_blank&#34;&gt;email&lt;/a&gt; and I will try to help out.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Bloom&lt;/b&gt;
&lt;br/&gt;
Some of the play testers have had problems understanding that you cannot transport the marble across connector blocks. I do not blame them. Since they appeared solid the testers were frustrated when the marble passed through them. I needed something that conveyed the idea of energy and light. I needed the possibility to express a glow like effect.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/graphicsD.png&#34; alt=&#34;Bloom screenshot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I started exploring possibilities to implement this and once again I found a great article on &lt;a href=&#34;https://learnopengl.com/Advanced-Lighting/Bloom&#34; target=&#34;_blank&#34;&gt;Learn OpenGL&lt;/a&gt;. I want to underline that Learn OpenGL has been a fantastic resource throughout this entire project. The articles are great and there are even source code samples you can play around with.&lt;/p&gt;

&lt;p&gt;With the sample code and text to go with that it did not take long time until I had a first solution up and running.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Normal mapping&lt;/b&gt;
&lt;br/&gt;
By using normal maps it is possible to squeeze in a lot more surface detail without paying a high price in terms of performance. Since I use Assimp, to load my FBX models, and it can calculate tangent space vectors it was not that much of work to support tangent space normal maps in the engine. First I played around with pretty agressive normal maps but it did not really contribute as much as I would have hoped. Instead I decided to use a more subtle effect, just to add some variation between the blocks used in the game.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Environment mapping&lt;/b&gt;
&lt;br/&gt;
There are a few different blocks in the game and some have different meanings. Like the energy blocks that are needed to &amp;ldquo;pay&amp;rdquo; for blocks being placed in the game. I did not have a distinct look for these so I was thinking I should rely on the old &amp;ldquo;gold&amp;rdquo; look for this. Obviously I needed a way to render sharp reflections.&lt;/p&gt;

&lt;p&gt;The easiest trick in the book for this is by using cube maps. Once I got it working and changed the look to something gold like it just did not feel right. Instead I ended up giving the energy blocks a look that relates to the glowing green connectors. I hope this will help the player to make the connection (no pun intended) between the energy blocks you pick up and the cost of the blocks you place in the game. We will see if this actually works out during future play testing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/graphicsA.png&#34; alt=&#34;Environment screenshot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Tweak SSAO&lt;/b&gt;
&lt;br/&gt;
When I added support for bloom I noticed some nasty SSAO artifacts. I did have some artifacts before but it got way worse. Since something needed to change I started to look into various ways to tweak the existing solution. Removing SSAO completely was never an option since this effect is crucial to give the game a decent look.&lt;/p&gt;

&lt;p&gt;The result was a more cartoon like effect which fits well into the game.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Outline for blocks to be placed&lt;/b&gt;
&lt;br/&gt;
In order to improve interpretation of blocks being placed I added an outline around them. Since I render these without any SSAO this makes it easier to see the actual shapes of the blocks being placed.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Blender sculpting, decimation and UV-mapping&lt;/b&gt;
&lt;br/&gt;
Even though I like the wooden look of the blocks I got some feedback concerning them all looking the same. I decided to try out a stone look instead. How to model stones? Blender to the rescue. Once again I got the chance to use Blender and even though it was not without frustration it worked out pretty well.&lt;/p&gt;

&lt;p&gt;I learnt a few new things concerning sculpting and started thinking about buying a Wacom. This &lt;a href=&#34;https://www.youtube.com/watch?v=iQ2lRRtih7w&#34; target=&#34;_blank&#34;&gt;video&lt;/a&gt; was a great source of inspiration. When something has been sculpted you need to reduce it in order to be able to use it in real-time. The reduction worked pretty well. I needed to do some hand tweaking to remove T-junctions etc but overall it worked out fine. Then I used a Blender feature called &amp;ldquo;Smart UV Project&amp;rdquo; in order to be able to map a stone texture to the blocks.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/graphicsC.png&#34; alt=&#34;Sculpting&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I also introduced some randomness when selecting how a block is being rotated in the game giving the games look a bit more variation. This could easily be improved further by adding a few more textures and normal maps (as discussed earlier).&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Eye highlight&lt;/b&gt;
&lt;br/&gt;
Last but not least I changed how the eye highlight is being rendered. Before I used an additional mesh for it. It works but it does not look natural. So instead I added an extra light source placed close to the camera to contribute with some specular effects. It is a hack but I think it worked out pretty good.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/graphicsB.png&#34; alt=&#34;Highlight&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Expression</title>
      <link>/post/expression/</link>
      <pubDate>Sat, 18 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/post/expression/</guid>
      <description>&lt;p&gt;No post in a while but I continued working on Marbleous blocks and in particular I have been focusing on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Raft feature.&lt;/li&gt;
&lt;li&gt;More puzzles.&lt;/li&gt;
&lt;li&gt;Undo &amp;amp; Redo.&lt;/li&gt;
&lt;li&gt;Marble expression.&lt;/li&gt;
&lt;li&gt;Marketing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;Raft feature&lt;/b&gt;
&lt;br/&gt;
I have added a feature that allows the player to move already placed blocks. This adds a nice new dimension to the game and opens up the door for some interesting puzzles. I still have not fully explored the possibilities this feature enables but I have created a few new puzzles based on this mechanic.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;More puzzles&lt;/b&gt;
&lt;br/&gt;
I am starting to see the end of the tunnel. Currently I have 41 puzzles. The five worlds are nearly completed. I still have four puzzles to go, including the final puzzle that will be a bit bigger. Then I plan to add a few hidden puzzles to reward curious/dedicated players. I think there is a good variety of puzzles but I am not sure about the difficulty level. I need to make sure there are no brutal roadblocks, otherwise players will most likely give up. I want the game to be challenging but not impossible or unfair. More feedback is definitely needed to reach that goal.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Undo &amp;amp; Redo&lt;/b&gt;
&lt;br/&gt;
I got some great feedback concerning the lack of being able to undo a &amp;ldquo;move&amp;rdquo;. This is particularly annoying if you simply slipped a bit with the mouse. Marbleous Blocks does not want to punish the player for something like that as it is not fun nor interesting. So to overcome this annoyance I have implemented support for undo &amp;amp; redo based on the simple &lt;a href=&#34;http://blog.tuxedolabs.com/2018/07/10/undo-for-lazy-programmers.html&#34; target=&#34;_blank&#34;&gt;idea&lt;/a&gt; presented by Dennis Gustafsson. I think this is a nice contribution to the game as it removes an unwanted source of frustration.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Marble expression&lt;/b&gt;
&lt;br/&gt;
I recently joined &lt;a href=&#34;https://eastswedengame.se/&#34; target=&#34;_blank&#34;&gt;ESG&lt;/a&gt; to get more game development related inspiration but also try to give some back. The ESG community provided me with some nice feedback concerning the lack of story elements in Marbleous Blocks. This got me thinking more about this and even though Marbleous Blocks will not be a story rich game it would still benefit from a back story. Just by creating a backstory I saw the need for a more vivid main character opposed to a simple marble. So I decided to add eyes and eyebrows to the main character in order to convey some kind of expression. This gives the game a more cartoonish, or if you wish childish, look but I hope this will not drive away serious players. I guess time will tell.&lt;/p&gt;

&lt;p&gt;I also got the opportunity to dust off some of my old modeling and animation skills. With some simple keyframe animations of the eyebrows and some animations of the eyes, based on where the player&amp;rsquo;s mouse cursor is located, I managed to bring life to our so far unnamed marbleous hero.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Marketing&lt;/b&gt;
&lt;br/&gt;
Just like most developers I spend most of my time on actual development. From my somewhat narrow perspective, there is nothing wrong with that but if no one knows about your game or application no one will play or use it, and to no surprise I want people to play my game. So I have watched a few interesting videos related to marketing, learnt some new stuff and are currently trying to apply some of that knowledge. I realize that I like most parts of game development, even marketing related efforts. I still have lots of things to learn about marketing but I like learning new things. In fact I find learning new things fundamental to happiness, at least for myself.&lt;/p&gt;

&lt;p&gt;I recently started using &lt;a href=&#34;https://twitter.com/Pixleon_Games&#34; target=&#34;_blank&#34;&gt;Twitter&lt;/a&gt; in an attempt to find a bit more spot light. We will see how it pans out.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Less is more</title>
      <link>/post/slim-demo/</link>
      <pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/post/slim-demo/</guid>
      <description>&lt;p&gt;Today I have reworked the demo version of Marbleous Blocks. It is a lot slimmer than the previous version, only featuring 10 puzzles. I hope this is enough to give the player a good idea of what kind of game experience to expect and whether he or she would be interested in buying the game or not.&lt;/p&gt;

&lt;p&gt;The new version is available &lt;a href=&#34;https://github.com/pixleon/pixleon.github.io/releases/download/mb/Marbleous.Blocks.zip&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Apart from this I have been working on a new game mechanic that I think will have an interesting impact on the game experience, but I will present this later in another post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cover art</title>
      <link>/post/cover-art/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/post/cover-art/</guid>
      <description>&lt;p&gt;I have started preparing &lt;a href=&#34;https://github.com/pixleon/pixleon.github.io/releases/download/mb/Marbleous.Blocks.zip&#34; target=&#34;_blank&#34;&gt;Marbleous Blocks&lt;/a&gt; for early access on Steam. There are quite a few steps involved in this process. One of them being cover art.&lt;/p&gt;

&lt;p&gt;So that is what I have been working on during evenings this week. Above you can see one of the images I produced. It showcases some features in the game like various marbles with different abilities, falling blocks, catapults, various &amp;ldquo;connectors&amp;rdquo; (the green symbols) etc.&lt;/p&gt;

&lt;p&gt;It was a lot of fun working with 3D-modeling and rendering again. Last time I did it &amp;ldquo;seriously&amp;rdquo; was with 3ds Max 4 around 20 years ago - wow, time really flies.&lt;/p&gt;

&lt;p&gt;Anyway today I use &lt;a href=&#34;https://www.blender.org/&#34; target=&#34;_blank&#34;&gt;Blender&lt;/a&gt;, and it has evolved tremendously since last I tried it. There are still some things that feel awkward, like multi select, but overall it allows you to do what I want, and there are a lot of possibilities for customization of the UI. The interactive path tracing they provide was of great help when trying to find the correct look for the cover art. Blender is an excellent tool for indie developers for various reasons. To begin with it is completely free of charge. On top of that there is a big community around Blender which makes it easy to find answers to questions you might stumble across when working in it.&lt;/p&gt;

&lt;p&gt;Another tool I used was &lt;a href=&#34;https://www.gimp.org/&#34; target=&#34;_blank&#34;&gt;GIMP&lt;/a&gt; which is a free image editor that I am also quite fond of.&lt;/p&gt;

&lt;p&gt;Tools like this enable developers like myself to make pretty high quality stuff without spending a fortune. If Pixleon ever would become financially successful I need to look into giving back to this community of great/free tools.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New demo</title>
      <link>/post/new-demo/</link>
      <pubDate>Thu, 07 May 2020 00:00:00 +0000</pubDate>
      <guid>/post/new-demo/</guid>
      <description>&lt;p&gt;Yesterday I uploaded a new version of Marbleous Blocks. This version contains bug fixes, various level editor improvements and five new puzzles.&lt;/p&gt;

&lt;p&gt;There are now a whooping 23 puzzles in the &lt;a href=&#34;https://github.com/pixleon/pixleon.github.io/releases/download/mb/Marbleous.Blocks.zip&#34; target=&#34;_blank&#34;&gt;demo&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;I do not expect the final demo to contain more puzzles than this (possibly fewer) but I might tweak and rearrange puzzles depending on feedback I get from play testing.&lt;/p&gt;

&lt;p&gt;Creating puzzles is fun and challenging. Lately I have found inspiration from shapes and patterns. For instance I might start to build a puzzle from a hearth shape or from a checker pattern. It does not always result in an interesting puzzle but usually you just need a seed of inspiration to get your mind spinning.&lt;/p&gt;

&lt;p&gt;The goal is to reach 50 puzzles before releasing the game so there is still lots of work left to be done.&lt;/p&gt;

&lt;p&gt;If you have a good idea for a puzzle please send us an &lt;a href=&#34;mailto:mail@pixleon.com&#34; target=&#34;_blank&#34;&gt;email&lt;/a&gt; or try to create it yourself in the demo.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Trailer</title>
      <link>/post/trailer/</link>
      <pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/post/trailer/</guid>
      <description>&lt;p&gt;I just uploaded a short trailer for the beta version of the Marbleous Blocks. To produce the trailer I used the built-in Windows 10 Game bar capture tool along with an awesome (free) piece of software called &lt;a href=&#34;https://fxhome.com/hitfilm-express&#34; target=&#34;_blank&#34;&gt;Hitfilm Express&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here is the result:&lt;/p&gt;

&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/rSl9THp6nYs&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;Pixleon would be very happy if you would consider to try out the beta. It is free and available &lt;a href=&#34;https://github.com/pixleon/pixleon.github.io/releases/download/mb/Marbleous.Blocks.zip&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;. Pixleon would be even happier if you would &lt;a href=&#34;mailto:mail@pixleon.com&#34; target=&#34;_blank&#34;&gt;share your impressions&lt;/a&gt;. Is is too easy/hard? Which level was most fun? Are the controls intuitive? Please help us make this game the best it can be. Many thanks in advance.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>More levels</title>
      <link>/post/more-levels/</link>
      <pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/post/more-levels/</guid>
      <description>&lt;p&gt;A number of friends and colleagues have tried the game now and I have gotten some really valuable feedback. Many thanks to all of you. I have not been able to fix all the hickups yet but I will get there eventually.&lt;/p&gt;

&lt;p&gt;Since I released the beta I have not been able to work that much on the game. There are two reasons for this. First, I have started working full time at &lt;a href=&#34;https://configura.com&#34; target=&#34;_blank&#34;&gt;Configura&lt;/a&gt; again. No more Tuesdays off to work on the game, at least not at this time. Secondly and more important, me and my wife got our second child - a healthy baby girl. Even though programming and game development is something I really enjoy it is nothing compared to what I get back from my family - you are the best.&lt;/p&gt;

&lt;p&gt;Anyhow, I have made a bit of progress since last time. There are now five new levels available in the beta that can be downloaded for free &lt;a href=&#34;https://github.com/pixleon/pixleon.github.io/releases/download/mb/Marbleous.Blocks.zip&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;. I got some feedback concerning the steep increase in difficulty and to alleviate that I have created a few more introductory levels&lt;/p&gt;

&lt;p&gt;My next step is to create even more levels. I still have not made a trailer so that is also high on my priority list.&lt;/p&gt;

&lt;p&gt;I have also started to design a &amp;ldquo;directed raft&amp;rdquo; feature. It is basically a block that can carry the player/marble from one platform to another. I hope this will open up for some interesting levels. Especially in combination with the different marbles, the &amp;ldquo;catapult&amp;rdquo; and &amp;ldquo;drop&amp;rdquo; feature that is already in the game. I also aim to have triggers/button that will allow the player to change direction in which the raft moves. Time will tell if this feature is as good in practice as it is on paper. Nevertheless, trying out new things like this usually open up for new interesting ideas.&lt;/p&gt;

&lt;p&gt;From my perspective game development is a lot about exploration of different ideas and concepts and trying out how those concepts interact with each other. This is one of the things I find particularly engaging and fun when it comes to working with interactive software such as games.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Beta release</title>
      <link>/post/beta-release/</link>
      <pubDate>Sat, 14 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/post/beta-release/</guid>
      <description>&lt;p&gt;After total silence for a few months I am happy to announce that there is a playable &amp;ldquo;early beta&amp;rdquo; version of Marbleous Blocks available &lt;a href=&#34;https://github.com/pixleon/pixleon.github.io/releases/download/mb/Marbleous.Blocks.zip&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;. At the time of writing there are 12 puzzles available but hopefully the number of puzzles will increase quite a bit before the summer.&lt;/p&gt;

&lt;p&gt;So what have I been spending time on since December? A lot of different things actually, but here is an overview:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Extending the level editor with various features.&lt;/li&gt;
&lt;li&gt;Experimenting with different game mechanics to improve variation.

&lt;ul&gt;
&lt;li&gt;Catapults.&lt;/li&gt;
&lt;li&gt;Falling blocks.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Support for three marbles with different abilities.

&lt;ul&gt;
&lt;li&gt;Normal.&lt;/li&gt;
&lt;li&gt;Lightweight.&lt;/li&gt;
&lt;li&gt;Anti-gravity.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Support for Save/Load progress.

&lt;ul&gt;
&lt;li&gt;Support for auto save.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Improving the menu system.

&lt;ul&gt;
&lt;li&gt;Show credits.&lt;/li&gt;
&lt;li&gt;Save slots.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Upgrading C++ version along with different libs.&lt;/li&gt;
&lt;li&gt;Redesigning world piece placement.&lt;/li&gt;
&lt;li&gt;Finding suitable game music.&lt;/li&gt;
&lt;li&gt;Looking over licenses for assets.&lt;/li&gt;
&lt;li&gt;Improving first impression and robustness by:

&lt;ul&gt;
&lt;li&gt;Installing C++ redistributable package if necessary.&lt;/li&gt;
&lt;li&gt;Showing a custom program icon.&lt;/li&gt;
&lt;li&gt;Solving the notorious dll loading problem.&lt;/li&gt;
&lt;li&gt;Giving hints to the player how to interact with the game.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Reworking color palette.&lt;/li&gt;
&lt;li&gt;Polishing of graphics. Shaders, 3D-models and materials.&lt;/li&gt;
&lt;li&gt;Creating an automatic script for packaging the game.&lt;/li&gt;
&lt;li&gt;Debugging various problems.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have any feedback concerning the &amp;ldquo;early beta&amp;rdquo; version of Marbleous Blocks I would be very happy to hear from you. Please send me an &lt;a href=&#34;mailto:mail@pixleon.com&#34; target=&#34;_blank&#34;&gt;email&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here is some geek stats gathered by using &lt;a href=&#34;http://cloc.sourceforge.net&#34; target=&#34;_blank&#34;&gt;cloc&lt;/a&gt;.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Languages&lt;/th&gt;
&lt;th&gt;files&lt;/th&gt;
&lt;th&gt;blank&lt;/th&gt;
&lt;th&gt;comment&lt;/th&gt;
&lt;th&gt;code&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Marbleous Blocks&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;C++&lt;/td&gt;
&lt;td&gt;92&lt;/td&gt;
&lt;td&gt;3575&lt;/td&gt;
&lt;td&gt;4211&lt;/td&gt;
&lt;td&gt;10112&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;C/C++ Header&lt;/td&gt;
&lt;td&gt;98&lt;/td&gt;
&lt;td&gt;1283&lt;/td&gt;
&lt;td&gt;320&lt;/td&gt;
&lt;td&gt;3641&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;make&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;48&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;152&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;DOS Batch&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;53&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Windows Resource File&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;SUM:&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;4931&lt;/td&gt;
&lt;td&gt;4549&lt;/td&gt;
&lt;td&gt;13959&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Pixleon Engine&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;C++&lt;/td&gt;
&lt;td&gt;97&lt;/td&gt;
&lt;td&gt;3008&lt;/td&gt;
&lt;td&gt;3265&lt;/td&gt;
&lt;td&gt;6658&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;C/C++ Header&lt;/td&gt;
&lt;td&gt;169&lt;/td&gt;
&lt;td&gt;2241&lt;/td&gt;
&lt;td&gt;1137&lt;/td&gt;
&lt;td&gt;4923&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;make&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;120&lt;/td&gt;
&lt;td&gt;53&lt;/td&gt;
&lt;td&gt;246&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;DOS Batch&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;107&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;SUM:&lt;/td&gt;
&lt;td&gt;282&lt;/td&gt;
&lt;td&gt;5399&lt;/td&gt;
&lt;td&gt;4455&lt;/td&gt;
&lt;td&gt;11934&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;My next step is to create more interesting levels along with a short trailer to showcase the game. In the meantime I hope you enjoy the beta.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Level editor</title>
      <link>/post/level-editor/</link>
      <pubDate>Sat, 07 Dec 2019 00:00:00 +0000</pubDate>
      <guid>/post/level-editor/</guid>
      <description>&lt;p&gt;I think it is about time I share a bit more information about the game I am working on and what I have been up to during the last couple of weeks.&lt;/p&gt;

&lt;p&gt;The game is called Marbleous Blocks. It is a minimalistic 3D-puzzle/physics game, that consist of several small puzzles. Each puzzle is composed of a few floating platforms and the goal is to guide a marble between those platforms. In order to do so you need to carefully place Tetris-like block pieces between the floating platforms. However, in order to forge a piece, you need a blueprint for the piece and enough block energy. So, it is not just a matter of finding a valid path, you also need to think about how to spend your block energy.&lt;/p&gt;

&lt;p&gt;Throughout a puzzle there may be various useable objects that can be picked up. Some examples include blueprints, energy units and catapults. It is also possible to change the marble you are using to a different one with other properties. Initially you will just have a single marble but as you progress you will find new marble friends that will join your quest. The idea with this approach is to keep the game interesting, but also to increase the difficulty of the puzzles by having more game mechanics to combine in various ways.&lt;/p&gt;

&lt;p&gt;I have been playing around with different ways to interact with the marble. Initially my idea was that the player would control the marble in a direct fashion by using a game pad or keyboard, but early testing proved that the interesting part of the game was to find solutions to puzzles rather than having direct control over the marble. A bonus of this design decision is that the entire game can be played just by using the mouse. I think this has the big benefit of making the game much easier to approach for non-experienced players.&lt;/p&gt;

&lt;p&gt;The last couple of weeks I have been working on a level editor. The reason is to simplify puzzle creation but also give future players a way to challenge their creativity. My initial approach was to use &lt;a href=&#34;https://www.lua.org/&#34; target=&#34;_blank&#34;&gt;Lua&lt;/a&gt; for level creation but even though that allowed for fast iteration it is not as straight forward and playful as dragging or &amp;ldquo;painting&amp;rdquo; out various game objects.&lt;/p&gt;

&lt;p&gt;So how did it go? Overall, I think it went pretty good. I have not been able to finish all the tasks related to the level editor yet, but I think I have a good scalable solution now. Using &lt;a href=&#34;https://github.com/ocornut/imgui&#34; target=&#34;_blank&#34;&gt;Dear IMGUI&lt;/a&gt; was a good decision, at least it seems like a good choice so far. There are plenty of examples available and the API is clean and easy to use.&lt;/p&gt;

&lt;p&gt;So what is next? Well, currently I am looking into how to create interesting levels of varying difficulty. I realize that it will take lots of play testing to find the right balance. It is so easy to assume certain things when you design puzzles and these assumptions may prove to be wrong. I am also trying to figure out what game mechanics that will give the game the variation needed to keep players interested. I think am on a good path but I will let future play testing be the judge of that.&lt;/p&gt;

&lt;p&gt;That is it for this time. Hopefully I can share some more footage from the game and editor in the upcoming weeks.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello world</title>
      <link>/post/hello-world/</link>
      <pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/hello-world/</guid>
      <description>&lt;p&gt;Hello fellow reader and welcome to my site where I will be sharing information about myself and my indie game adventure. Before I tell you a bit more about Pixleon AB I think it is appropriate to give a short introduction of who I am.
My name is &lt;a href=&#34;http://www.jimmiewest.se/&#34; target=&#34;_blank&#34;&gt;Jimmie West&lt;/a&gt;, a 35 years old Swedish family man and software developer. It is very important to me to put my family first. If they feel well, I feel well.&lt;/p&gt;

&lt;p&gt;During the last 10+ years I have been working at an awesome company called &lt;a href=&#34;https://www.configura.com/&#34; target=&#34;_blank&#34;&gt;Configura&lt;/a&gt;. Configura’s vision is to become the global leader for developing software used to design spaces. It’s been a fun and at times challenging but rewarding journey and I am happy that I got this opportunity.&lt;/p&gt;

&lt;p&gt;Like for many other people my age, my fascination for games started with the NES. While playing most of NES games you really needed to focus, otherwise you would “die” and eventually need to restart the game from the beginning. There was “lots at stake”. I think this formed me as a person quite a bit. For instance, I could spend months just trying to figure out how to make jump with my skateboard, but when I finally figured it out, I felt invincible. In this way I learned that hard work and staying focused usually pays off. My greatest talent is my ability to stay focused and goal oriented.&lt;/p&gt;

&lt;p&gt;So, why do I want to make games? To become rich and famous? No, not really. The primary driving force for me is the creative freedom and possibility to express and challenge myself through this art form. I refer to it as art rather than engineering even though having engineering skills obviously help with some aspects of game development.&lt;/p&gt;

&lt;p&gt;During the upcoming six months I will spend one workday a week developing a &lt;a href=&#34;http://pixleon.com/project/marbleous-blocks/&#34; target=&#34;_blank&#34;&gt;puzzle game&lt;/a&gt; for PC. At this point the scope seems to be within reach but there is usually a lot of unforeseen events along the road of completing something, but that is also one of the fun parts. In order to be able to work on this from home and still have my son at kindergarten I had to create a company – Pixleon AB. Pixleon is a play on words, pixel and aeon (a long period of time). Pixels represent something creative and fun to me, so it was natural to have something related to that. It was also important to try to find a somewhat short name that is easy to remember.&lt;/p&gt;

&lt;p&gt;Now I hope you have a better idea of who I am and what motivates me. In the upcoming posts I will try to give you more information about the game I am making, the technology behind it and the ideas that go through my head while developing it. Stay tuned.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
